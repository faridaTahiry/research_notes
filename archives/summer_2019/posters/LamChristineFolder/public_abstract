Planet Universe! is a space themed game created by utilizing a technique called procedural generation—the generation of data pseudo-randomly using computer algorithms. It is what makes games like Minecraft able to infinitely generate whole worlds without specifically coding each block 
 
Planet Universe! is a playable game that infinitely creates random stars, nebulae, and planets. When launching the game, the user is brought to a standard launch menu where they can click on buttons to either start the game, see the credits menu, or exit the game. After clicking play, the screen scenery transforms into stars and nebule. In the future, when movement mechanics are added, the user will be able to travel in any 2D direction and more space objects will appear but without repeat. 
 
All the components in the game are rendered in a similar fashion where the game area is broken down into “tiles” and each tile comes together to make a “layer” and the layers are stacked on top of each other to make a “universe”. The program generates the stars by randomly placing four given star images onto the tiles and placing independently generated star tiles together to form a layer which are randomly layered on top of other independently generated layers at different distances to create a depth effect. The game only generates tiles if they are near the area where the player can see in order to prevent the generation of unnecessary tiles. 
 
In addition to stars, the game also generates purple nebulae using a technique called “noise functions.” The program has a color gradient palette that it is given, and it picks similar colors and a pseudo-random transparency to make the nebula seem continuous and smoothly blended.  
 
Creating the nebulae was super challenging. Getting a good understanding of the technique used to create the nebulas was hard, as many sources I looked at contradicted each other. My first attempt at creating the nebula was a failure as my algorithm did not worked as I hoped so I had to go back and relearn how to make the colors seem smooth as it transitioned into another color. 
 
