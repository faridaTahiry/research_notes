Public Abstract: 

My goal was to write a program that draws many 3D cubes on the screen, and then use those cubes for a basic simulation of sand movement.  There are many ways of representing objects in 3D, and I chose to approximate objects through many small cubes because this method maps fairly well to the many small grains that compose a pile of sand.

In order to draw cubes on the screen, I conceptualize the virtual space as a 3D grid - like graph paper, but in three dimensions. Within that, I keep track of each grid square, and whether it is empty (thin air) or full (has a cube in it). 

The screen, and therefore the image on it, is made up of pixels, tiny squares of color.  Since each pixel can have only one color, a whole image is constructed by figuring out the color of each pixel.  Therefore, I imagine the screen, and all of the pixels on it, as existing in a 3D virtual space.  Then, the program sends a line from each pixel out into the 3D space.  The program checks if that line passes through a cube that is full, and if so, it draws the pixel in the color of that cube.  Otherwise, it keeps going, and this repeats until it hits a cube and draws it, or it exits the grid, in which case it draws the background color.  Through this method, the program draws scenes that look blocky, but actually contain up to hundreds of thousands of cubes.

Once the program can draw cubes, it can be used to manipulate the cubes to simulate various things.  For this project, I focused on simulating sand, but could use the cube drawing program for many other things in the future.

The program approximates falling sand by checking for each cube whether there is empty space beneath it. If so, the cube moves down, causing it to "fall."  Then, because sand does not retain its starting shape, the program checks for space down and to the side, and if possible, will move the cube into that space, creating the typical pyramid-like shape that sand tends to form.

